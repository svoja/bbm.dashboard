<div id="studentList" class="card shadow-sm p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h5 class="gradient-text mb-0">รายชื่อนักเรียนทั้งหมด</h5>
        <button type="button" class="btn-close" onclick="toggleContent('studentList')"></button>
    </div>

    <div class="mb-4">
        <div class="row g-3">
            <div class="col-md-6">
                <input type="text" class="form-control" id="searchInput" placeholder="ค้นหาชื่อนักเรียน..." onkeyup="fetchStudents(1)">
            </div>
            <div class="col-md-6">
                <select class="form-select" id="subjectFilter" onchange="fetchStudents(1)">
                    <option value="">ทุกวิชา</option>
                    <% [...new Set(details.students.flatMap(s => s.classes))].sort().forEach(subject => { %>
                        <option value="<%= subject %>"><%= subject %></option>
                    <% }); %>
                </select>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="table-light">
                <tr>
                    <th>รหัสนักเรียน</th>
                    <th>ชื่อ</th>
                    <th>วิชาที่เรียน</th>
                    <th>ครูผู้สอน</th>
                </tr>
            </thead>
            <tbody id="studentTableBody">
                <!-- Students will be dynamically updated -->
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between mt-4">
        <div id="studentsCountText" class="text-muted"></div>
        <nav>
            <ul class="pagination" id="paginationContainer">
                <!-- Pagination buttons will be dynamically updated -->
            </ul>
        </nav>
    </div>
</div>

<script>
let currentPage = 1;

function fetchStudents(page = 1) {
    currentPage = page;

    const search = document.getElementById('searchInput').value.trim();
    const subject = document.getElementById('subjectFilter').value;

    fetch(`/api/students?page=${page}&search=${encodeURIComponent(search)}&subject=${encodeURIComponent(subject)}`)
        .then(response => response.json())
        .then(data => {
            const studentTableBody = document.getElementById('studentTableBody');
            studentTableBody.innerHTML = data.students.map(student => `
                <tr>
                    <td>${student.bbm_id || 'N/A'}</td>
                    <td>${student.name || 'ไม่ระบุชื่อ'}</td>
                    <td>${student.classes ? student.classes.map(className => `
                        <span class="badge rounded-pill bg-primary text-white me-1">${className}</span>
                    `).join('') : 'ไม่มีวิชาที่ลงทะเบียน'}</td>
                    <td>${student.teachers && student.teachers.length > 0 ? student.teachers.map(teacherName => `
                        <span class="badge rounded-pill bg-secondary text-white me-1">${teacherName}</span>
                    `).join('') : 'ไม่มีครูผู้สอน'}</td>
                </tr>
            `).join('');

            // Update showing count with Thai language
            const startCount = ((page - 1) * 10) + 1;
            const endCount = Math.min(startCount + data.students.length - 1, data.totalStudents);
            const countText = data.totalStudents > 0 
                ? `แสดง ${startCount} ถึง ${endCount} จากทั้งหมด ${data.totalStudents} คน`
                : 'ไม่พบข้อมูลนักเรียน';
            document.getElementById('studentsCountText').textContent = countText;

            updatePagination(data.pagination);
        })
        .catch(error => {
            console.error('Error fetching students:', error);
            document.getElementById('studentTableBody').innerHTML = `
                <tr>
                    <td colspan="4" class="text-center text-danger">
                        เกิดข้อผิดพลาดในการโหลดข้อมูล กรุณาลองใหม่อีกครั้ง
                    </td>
                </tr>
            `;
        });
}

function updatePagination(pagination) {
    const paginationContainer = document.getElementById('paginationContainer');
    
    if (pagination.total <= 1) {
        paginationContainer.innerHTML = '';
        return;
    }

    let paginationHTML = '';

    // Previous button
    paginationHTML += `
        <li class="page-item ${pagination.current === 1 ? 'disabled' : ''}">
            <button class="page-link" onclick="fetchStudents(${pagination.current - 1})" ${pagination.current === 1 ? 'disabled' : ''}>
                <span aria-hidden="true">&laquo;</span>
            </button>
        </li>
    `;

    // Calculate page range
    let startPage = Math.max(1, pagination.current - 2);
    let endPage = Math.min(pagination.total, pagination.current + 2);

    // Add first page and ellipsis if necessary
    if (startPage > 1) {
        paginationHTML += `
            <li class="page-item">
                <button class="page-link" onclick="fetchStudents(1)">1</button>
            </li>
        `;
        if (startPage > 2) {
            paginationHTML += '<li class="page-item disabled"><span class="page-link">...</span></li>';
        }
    }

    // Page numbers
    for (let i = startPage; i <= endPage; i++) {
        paginationHTML += `
            <li class="page-item ${pagination.current === i ? 'active' : ''}">
                <button class="page-link" onclick="fetchStudents(${i})">${i}</button>
            </li>
        `;
    }

    // Add last page and ellipsis if necessary
    if (endPage < pagination.total) {
        if (endPage < pagination.total - 1) {
            paginationHTML += '<li class="page-item disabled"><span class="page-link">...</span></li>';
        }
        paginationHTML += `
            <li class="page-item">
                <button class="page-link" onclick="fetchStudents(${pagination.total})">${pagination.total}</button>
            </li>
        `;
    }

    // Next button
    paginationHTML += `
        <li class="page-item ${pagination.current === pagination.total ? 'disabled' : ''}">
            <button class="page-link" onclick="fetchStudents(${pagination.current + 1})" ${pagination.current === pagination.total ? 'disabled' : ''}>
                <span aria-hidden="true">&raquo;</span>
            </button>
        </li>
    `;

    paginationContainer.innerHTML = paginationHTML;
}

// Initial load
document.addEventListener('DOMContentLoaded', () => {
    fetchStudents();
});
</script>